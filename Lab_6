# Algebra Laboratory â„–6
# Kalishuk Ivan
# Student of math and mechanical faculcy of KNU
#---------------------------------- Task 1 ----------------------------------
import itertools
import time

def check(g,sub):
    lc = g.cosets(sub, side = "left")
    rc = g.cosets(sub, side = "right")
    def _check(lc,rc):
        res = []
        for i in lc:
            tmp = False
            for j in rc:
                if len(i) == len(j):
                    if i == j or sorted(i) == sorted(j) :
                        tmp = True
                        res.append(tmp)
                        break
            if tmp == False:
                return False
        return all(res)
    return _check(lc,rc)


G = DihedralGroup(8)
sub = None
for i in G.subgroups():
    if order(i) == 4 and i.is_cyclic():
        sub = i
        break
lc = G.cosets(sub, side = "left")
rc = G.cosets(sub, side = 'right')
print(sub.is_normal())
print(check(G,sub))

#---------------------------------- Task 2 ----------------------------------
def benchmark(f):
    def decor(*args, **kwargs):
        t0 = time.time()
        res = f(*args, **kwargs)
        t1 = time.time()
        print(t1-t0)
        return res
    return decor


@benchmark
def task_2(g,sub,type):
    ord = order(g)
    if type == 0:
        res = []
        for i in sub:
            if i != g.subgroup([()]) and i != g:
                if i.is_normal():
                    res.append(i)
        if res:
            for i in res:
                print(i)
        else:
            print('This group has no normal subgroups')

    if type == 1:
        res = []
        for i in sub:
            if i != g.subgroup([()]) and i != g:
                if check(g,i):
                    res.append(i)
        if len(res) != 0:
            for i in res:
                print(i)
        else:
            print('This group has no normal subgroups')

A = AlternatingGroup(5)
sub = A.subgroups()
task_2(A,sub,0)
task_2(A,sub,1)


#---------------------------------- Task 3 ----------------------------------
n = int(input('Enter order of group: '))
D = DihedralGroup(n)
counter = 0
counter_n = 0
for i in D.subgroups():
    counter += 1
    if i.is_normal():
        counter_n += 1
print(counter,counter_n)
