# берём представители классов
# перемножаем их
# ищем список, в котором есть наше произведение
#
# PermutationGroupMorphism?
# PermutationGroupMorphism_im_gens?
#
# №1  посчитать нсд(n,m), order(Im, ker)
# берём порядок ядра и возвращает количество гомоморфизмов для этого ядра

H < G будет нормальной <=> H - объединение классов спрояженых G
Класы спряеных в D4


from collections import defaultdict
#----------------------------- 1 -----------------------------
def get_homs(g1, g2):
    phi = []
    for i in range(len(g2)):
        try:
            p = PermutationGroupMorphism(g1, g2, [g2[i]])
            p(g1[0]) # we check if e(g1) --> e(g2)
            phi.append(p)
        except:
            pass
    return phi

def task_1(n, m):
    cn = CyclicPermutationGroup(n)
    cm = CyclicPermutationGroup(m)
    phi = get_homs(cn, cm)
    if not phi:
        return 'Not morphic'
    print('Number of homomorphisms: {}'.format(len(phi)))

    hom_ord = defaultdict(int)
    for i in range(len(phi)):
        ker = phi[i].kernel()
        im = phi[i].image(cn)
        hom_ord[ker.order()] += 1
        print(i+1)
        print('Kernel ({}): {}'.format(ker.order(), ker))
        print('Image ({}): {}'.format(im.order(), im))

    print('Number homomorphisms for order(ker):')
    for o, c in hom_ord.items():
        print('Order {} -- {} homomorphisms'.format(o, c))

task_1(10, 12)

#----------------------------- 2 -----------------------------
def task_2(n):
    D = DihedralGroup(n)
    homs = []
    dict = defaultdict()
    for s in D.normal_subgroups():
        phi = get_homs(s, D)
        for p in phi:
            if set(p.kernel().list()) == set(s.list()):
                homs.append(p)
    homs = list(set(homs))
    return homs

print(task_2(3))

#----------------------------- 3 -----------------------------
def task_3(n, k):
    D = DihedralGroup(n)
    C = CyclicPermutationGroup(k)
    phi = get_homs(D, C)
    for p in phi:
        tmp = [p(el) for el in D]
        if len(list(set(tmp))) <= k:
            del p
    return len(phi)

task_3(228,227)
